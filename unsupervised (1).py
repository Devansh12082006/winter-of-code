# -*- coding: utf-8 -*-
"""unsupervised.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1r3wYIZvj8FZic-6VIVzTZboKUErpDWIy
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

a=pd.read_csv("/content/unsupervised_data.csv")

x_train=a.values[0:40000,1:7]

def closest_centroids(X, centroids):
    k = centroids.shape[0]
    idx = np.zeros(X.shape[0], dtype=int)
    for i in range(X.shape[0]):
        distance= []

        for j in range(centroids.shape[0]):
            norm=np.linalg.norm(X[i] - centroids[j])
            distance.append(norm)
        idx[i]=np.argmin(distance)
    return idx

def compute_centroids(X, idx, K):
  m, n = X.shape
  centroids = np.zeros((K, n))
  for k in range(K):
        points =X[idx == k]
        centroids[k]=np.mean(points, axis = 0)
  return centroids

def run_kMeans(X, initial_centroids, max_iters=10,plot_progress=False):
    m, n = X.shape
    K = initial_centroids.shape[0]
    centroids = initial_centroids
    previous_centroids = centroids
    idx = np.zeros(m)
    plt.figure(figsize=(8, 6))

    for i in range(max_iters):
      print("K-Means iteration %d/%d" % (i, max_iters-1))

      idx = closest_centroids(X, centroids)
      centroids = compute_centroids(X, idx, K)
    return centroids, idx

k=4
max_iters = 10
initial_centroids = x_train[np.random.choice(x_train.shape[0], k, replace=False)]
centroids, idx = run_kMeans(x_train, initial_centroids, max_iters,plot_progress=True)
print(centroids,idx)